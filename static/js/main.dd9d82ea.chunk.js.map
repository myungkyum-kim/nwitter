{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewaccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","update","toggleEditing","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","file","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","accept","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","key","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","then","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","profile","currentUser","Boolean","getFullYear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd9d82ea.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMATIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGEIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n// Initialize Firebase\nexport default firebase.initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewaccount] = useState(true);\n  //const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    }\n    if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n      //setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewaccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n        />\n        <input\n          onChange={onChange}\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n        />\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button onClick={onSocialClick} name=\"google\">\n          Continue with Google\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are u sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    toggleEditing();\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n            />\n            <input type=\"submit\" value=\"Update Nweet\" />\n            <button onClick={toggleEditing}>Cancel</button>\n          </form>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} width=\"100px\" height=\"50px\" />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Nweet</button>\n              <button onClick={toggleEditing}>Edit Nweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    // await dbService.collection(\"nweets\").add({\n    //   text: nweet,\n    //   createdAt: Date.now(),\n    //   creatorId: userObj.uid,\n    // });\n    // setNweet(\"\");\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const file = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          value={nweet}\n          onChange={onChange}\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"Nweet\" />\n        <input onChange={onFileChange} type=\"file\" accept=\"image/*\" />\n        {attachment && (\n          <div>\n            <img src={attachment} width=\"100px\" height=\"50px\" />\n            <button onClick={onClearAttachment}>Clear</button>\n          </div>\n        )}\n      </form>\n    </>\n  );\n};\n\nexport default NweetFactory;\n","import Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    //getNweets();\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  // const getNweets = async () => {\n  //   const dbNweets = await dbService.collection(\"nweets\").get();\n  //   dbNweets.forEach((document) => {\n  //     const nweetObject = {\n  //       ...document.data(),\n  //       id: document.id,\n  //     };\n  //     setNweets((prev) => [nweetObject, ...prev]);\n  //   });\n  // };\n\n  return (\n    <div>\n      <NweetFactory userObj={userObj} />\n      <div>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n    console.log(nweets.docs.map((doc) => doc.data()));\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    if (userObj.displayName !== newDisplayName) {\n      await userObj\n        .updateProfile({\n          displayName: newDisplayName,\n        })\n        .then(\n          () => {\n            refreshUser();\n          },\n          () => {}\n        );\n    }\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n        />\n        <input type=\"submit\" value=\"Updata profile\" />\n      </form>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul>\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/profile\">{userObj.displayName}'s Profile</Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile refreshUser={refreshUser} userObj={userObj} />\n            </Route>\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (profile) => user.updateProfile(profile),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj(user);\n    console.log(\"updated name: \", user.displayName);\n    //setUserObj(Object.assign({}, user));\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing ...\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Nwiteer </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport firebase from \"fbase\"\nconsole.log(firebase);\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}